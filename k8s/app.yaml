apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: my-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - name: flask
        image: antonioberben/baggage-demo-app1:0.9
        imagePullPolicy: Always
        env:
        - name: REQUEST_URL
          value: "http://app2.my-system.svc.cluster.local:5000/"
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: app1
  namespace: my-system
spec:
  selector:
    app: app1
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  namespace: my-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
      - name: flask
        image: antonioberben/baggage-demo-app2:0.9
        imagePullPolicy: Always
        env:
        - name: REQUEST_URL
          value: "http://app3.my-system.svc.cluster.local:5000/"
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: app2
  namespace: my-system
spec:
  selector:
    app: app2
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3
  namespace: my-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app3
  template:
    metadata:
      labels:
        app: app3
    spec:
      containers:
      - name: flask
        image: antonioberben/baggage-demo-app3:0.9
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: app3
  namespace: my-system
spec:
  selector:
    app: app3
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
---
